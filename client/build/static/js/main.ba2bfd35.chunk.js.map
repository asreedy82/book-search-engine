{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","pages/SearchBooks.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getMe","fetch","headers","authorization","concat","saveBook","bookData","method","body","JSON","stringify","deleteBook","bookId","removeBookId","savedBookIds","parse","updatedSavedBookIds","filter","savedBookId","SearchBooks","_useState","useState","_useState2","_slicedToArray","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","wrap","_context","prev","next","preventDefault","abrupt","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","t0","console","error","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_context2","find","Auth","loggedIn","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBooks","userData","setUserData","userDataLength","Object","keys","getUserData","user","handleDeleteBook","updatedUser","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","_event$target","_objectSpread","_defineProperty","currentTarget","checkValidity","stopPropagation","log","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","App","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba2bfd35.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route \n            path='/' \n            element={<SearchBooks />} \n          />\n          <Route \n            path='/saved' \n            element={<SavedBooks />} \n          />\n          <Route \n            path='*'\n            element={<h1 className='display-2'>Wrong page!</h1>}\n          />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}